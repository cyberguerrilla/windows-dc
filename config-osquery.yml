---
- hosts: 127.0.0.1
  connection: local 
  gather_facts: no
  become: yes
  tasks:

  - name: Get Fleet enroll-secret and write to file
    shell: "echo {{item}} > /opt/playbooks/windows-dc/build-playbooks/osquery/osquery.key"
    with_lines: "sudo docker exec -i fleet /bin/sh -c 'fleetctl login --email guerillaBT@bsides.lab --password bsid3s\\! && fleetctl get enroll-secret' | awk 'NR==2'"

  - name: Delete old Fleet cert if exists
    file:
      state: absent
      path: "/opt/playbooks/windows-dc/build-playbooks/osquery/cert.crt"

  - name: Get Fleet cert and write to file
    shell: "echo {{item}} >> /opt/playbooks/windows-dc/build-playbooks/osquery/cert.crt"
    with_lines: "cat /opt/kolide/fleet/certs/server.cert"

- import_playbook: get-ips.yml

- hosts: win
  gather_facts: no

  tasks:

  - name: Set Fleet dns entry
    win_dns_record:
      name: "fleet"
      type: "A"
      value: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
      zone: "windomain.local"

  - name: Flush DNS
    win_command: ipconfig /flushdns

  - name: Copy osquery cert
    win_copy:
      src: ./build-playbooks/osquery/cert.crt
      dest: 'C:\Program Files\osquery\certs\cert.crt'
      remote_src: no

  - name: Copy osquery flags
    win_copy:
      src: ./build-playbooks/osquery/osquery.flags
      dest: 'C:\Program Files\osquery\osquery.flags'
      remote_src: no

  - name: Copy osquery key
    win_copy:
      src: ./build-playbooks/osquery/osquery.key
      dest: 'C:\Program Files\osquery\osquery.key'
      remote_src: no

  - name: Restart osqueryd
    win_service:
      name: osqueryd
      state: restarted
